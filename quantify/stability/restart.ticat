help = run rolling restart cluster test

[arg]
yaml = ''
cluster-name|cluster|name|N = ''
version|v = ''
confirm|cfm = off

duration = ''
threads = ''
workload = oltp_read_write

meta-host = ''
meta-port = ''
meta-db = ''
meta-user = root

s3_endpoint = ''
s3_username = ''
s3_password = ''

[arg2env]
tidb.tiup.yaml = yaml
tidb.cluster = cluster-name
tidb.version = version
tidb.op.confirm = confirm

bench.meta.host = meta-host
bench.meta.port = meta-port
bench.meta.db-name|db = meta-db
bench.meta.user = meta-user

bench.sysbench.duration = duration
bench.sysbench.threads = threads
bench.sysbench.test-name = workload

br.endpoint = s3_endpoint
br.username = s3_username
br.password = s3_password

[val2env]
quantify.generic.tpcc.storage = 'patrick/baseline/br-1T-6kwarehouse'
bench.workload = sysbench
bench.tpcc.warehouses = 6000

quantify.generic.sysbench.storage = 'patrick/baseline/sysbench-1T-1ktable-3000krow'
bench.sysbench.tables = 1000
bench.sysbench.table-size = 3000000

quantify.generic.ycsb.storage = 'patrick/baseline/ycsb-1T-400M'
bench.ycsb.record-count = 400000000
bench.ycsb.insert-count = 400000000

br.threads = 1000
br.checksum = false

[env]
bench.meta.host = read
bench.meta.port = read
bench.meta.db-name|db = read
bench.meta.user = read

[flow/]
tidb.destroy+new
^br.restore.s3
tidb.reload roles=pd,tikv %delay=5m
bench.run
bench.scan.jitter
bg.wait
tidb.rm
